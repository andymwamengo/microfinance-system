# Generated by Django 3.0.8 on 2020-08-18 15:40

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import institution.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('mfi_type', models.CharField(choices=[('saccoss', 'saccoss'), ('vicoba', 'vicoba'), ('bank', 'bank'), ('private', 'private')], max_length=20, verbose_name='mfi type')),
                ('mfi_name', models.CharField(max_length=30, verbose_name='mfi name')),
                ('mfi_license', models.CharField(max_length=30, verbose_name='mfi license')),
                ('mfi_service', models.CharField(max_length=30, verbose_name='mfi service')),
                ('mfi_assets', models.CharField(max_length=30, verbose_name='mfi assets')),
                ('mfi_liability', models.CharField(max_length=30, verbose_name='mfi liability')),
                ('mfi_technology', models.CharField(max_length=30, verbose_name='mfi technology')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='date updated')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'institutions',
                'verbose_name_plural': 'institutions',
                'db_table': 'institutions',
            },
            managers=[
                ('objects', institution.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserFeedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_email', models.CharField(blank=True, max_length=30, null=True, verbose_name='user email')),
                ('user_first_name', models.CharField(max_length=30, verbose_name='user first name')),
                ('user_last_name', models.CharField(max_length=30, verbose_name='user last name')),
                ('user_feedback', models.TextField(verbose_name='user feedback')),
                ('date_submitted', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
            ],
            options={
                'verbose_name': 'users_feedback',
                'verbose_name_plural': 'users_feedback',
                'db_table': 'users_feedbacks',
            },
        ),
        migrations.CreateModel(
            name='MfiStakeholder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stake_first_name', models.CharField(max_length=30, verbose_name='stakeholder first name')),
                ('stake_middle_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='stakeholder middle name')),
                ('stake_last_name', models.CharField(max_length=30, verbose_name='stakeholder last name')),
                ('stake_email', models.CharField(blank=True, max_length=30, null=True, verbose_name='stakeholder email')),
                ('stake_phone_number', models.CharField(blank=True, max_length=30, null=True, verbose_name='stakeholder phone number')),
                ('stake_citizenship', models.CharField(max_length=30, verbose_name='stakeholder citizenship')),
                ('stake_share', models.CharField(max_length=30, verbose_name='stakeholder share')),
                ('stake_avatar', models.ImageField(blank=True, null=True, upload_to='', verbose_name='stakeholder avatar')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='date updated')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mfi_stakeholder', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'institutions_stakeholder',
                'verbose_name_plural': 'institutions_stakeholders',
                'db_table': 'institutions_stakeholders',
            },
        ),
        migrations.CreateModel(
            name='MfiReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_assets', models.CharField(max_length=30, verbose_name='report assets')),
                ('report_liability', models.CharField(max_length=30, verbose_name='report liability')),
                ('report_revenue', models.CharField(max_length=30, verbose_name='report revenue')),
                ('report_income', models.CharField(max_length=30, verbose_name='report income')),
                ('report_dividend', models.CharField(blank=True, max_length=30, null=True, verbose_name='report dividend')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='date updated')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mfi_report', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'institutions_report',
                'verbose_name_plural': 'institutions_report',
                'db_table': 'institutions_reports',
            },
        ),
        migrations.CreateModel(
            name='MfiFeedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(verbose_name='mfi feedback')),
                ('content', models.TextField(verbose_name='mfi feedback')),
                ('date_submitted', models.DateTimeField(auto_now_add=True, verbose_name='date submitted')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mfi_feedback', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'institutions_feedback',
                'verbose_name_plural': 'institutions_feedback',
                'db_table': 'institutions_feedbacks',
            },
        ),
        migrations.CreateModel(
            name='MfiBoard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('board_first_name', models.CharField(max_length=30, verbose_name='board first name')),
                ('board_middle_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='board middle name')),
                ('board_last_name', models.CharField(max_length=30, verbose_name='board last name')),
                ('board_email', models.CharField(blank=True, max_length=30, null=True, verbose_name='board email')),
                ('board_phone_number', models.CharField(blank=True, max_length=30, null=True, verbose_name='board phone number')),
                ('board_citizenship', models.CharField(max_length=30, verbose_name='board citizenship')),
                ('board_position', models.CharField(max_length=30, verbose_name='board position')),
                ('board_avatar', models.ImageField(blank=True, null=True, upload_to='', verbose_name='board avatar')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='date updated')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mfi_board', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'institutions_board',
                'verbose_name_plural': 'institutions_board',
                'db_table': 'institutions_board_members',
            },
        ),
        migrations.CreateModel(
            name='MfiAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_office', models.CharField(max_length=30, verbose_name='address office')),
                ('addres_phone_number', models.CharField(blank=True, max_length=30, null=True, verbose_name='address phone number')),
                ('address_website', models.CharField(blank=True, max_length=30, null=True, verbose_name='address website')),
                ('address_pobox', models.CharField(blank=True, max_length=30, null=True, verbose_name='address pobox')),
                ('address_district', models.CharField(max_length=30, verbose_name='address district')),
                ('address_region', models.CharField(max_length=30, verbose_name='address region')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='date updated')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mfi_address', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'institutions_address',
                'verbose_name_plural': 'institutions_address',
                'db_table': 'institutions_address',
            },
        ),
        migrations.CreateModel(
            name='IcomePrediction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('input_age', models.CharField(max_length=10)),
                ('input_fast', models.CharField(max_length=10)),
                ('input_pp', models.CharField(max_length=10)),
                ('input_r', models.CharField(max_length=10)),
                ('input_f', models.CharField(max_length=10)),
                ('input_hbA1c', models.CharField(max_length=10)),
                ('error', models.CharField(max_length=100)),
                ('message', models.CharField(max_length=100)),
                ('prediction', models.CharField(max_length=10)),
                ('confidence_score', models.CharField(max_length=10)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mfi_predicts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'institutions_predictions',
                'verbose_name_plural': 'institutions_predictions',
                'db_table': 'institutions_predictions',
            },
        ),
        migrations.CreateModel(
            name='AdminFeedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin_feedback', models.TextField(verbose_name='admin feedback')),
                ('date_submitted', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admin_feedback', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'admin_feedback',
                'verbose_name_plural': 'admin_feedback',
                'db_table': 'admin_feedbacks',
            },
        ),
    ]
